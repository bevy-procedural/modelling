[package]
name = "procedural_modelling"
description = "A framework-agnostic Procedural Modelling crate."
version = "0.5.0"
edition = "2021"
categories = ["graphics", "rendering", "game-development"]
keywords = ["gamedev", "graphics", "procedural", "meshes", "modelling"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/bevy-procedural/modelling"
documentation = "https://docs.rs/procedural_modelling"
rust-version = "1.87.0"
include = [
    "src/**/*",
    "doc/**/*",
    "examples/**/*",
    "playground/**/*",
    "README.md",
    "Cargo.toml",
]
exclude = ["assets/"]

[lib]
name = "procedural_modelling"
path = "src/lib.rs"
crate-type = ["rlib"]

[workspace]
members = [
    "playground/bevy",
    "playground/svg",
    "playground/wgpu",
    "playground/fps_bench",
]

[workspace.lints.clippy]
type_complexity = "allow"
doc_markdown = "warn"
manual_let_else = "warn"
undocumented_unsafe_blocks = "warn"
redundant_else = "warn"
match_same_arms = "warn"
semicolon_if_nothing_returned = "warn"
map_flatten = "warn"

ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
ref_as_ptr = "warn"

[workspace.lints.rust]
unsafe_op_in_unsafe_fn = "warn"
missing_docs = "warn"

[lints]
workspace = true

[dependencies]
bevy = { version = "^0.17.2", default-features = false, optional = true }
itertools = "^0.14.0"
rand = "^0.9.2"
spade = "^2.15.0"
usvg = { version = "^0.45.1", optional = true }
lazy_static = "^1.5.0"
nalgebra = { version = "^0.34.1", optional = true }
num-traits = "^0.2.19"
criterion = { version = "^0.7.0", features = ["html_reports"], optional = true }
ttf-parser = { version = "^0.25.1", optional = true }


[features]
default = ["nalgebra", "netsci", "fonts"]
example_deps = ["bevy_example", "nalgebra", "fonts", "svg"]
netsci = ["nalgebra"]
wgpu = ["nalgebra"]
bevy = ["dep:bevy", "bevy/bevy_core_pipeline"]
gizmo = ["bevy", "bevy/bevy_text", "bevy/bevy_ui"]
bevy_example = ["bevy", "bevy/default", "gizmo"]
svg = ["dep:usvg"]
nalgebra = ["dep:nalgebra"]
fonts = ["dep:ttf-parser"]
bevy_dynamic = ["bevy/dynamic_linking"]
sweep_debug = []
sweep_debug_print = ["sweep_debug"]
benchmarks = ["dep:criterion", "bevy"]


[[example]]
name = "spiral"
path = "examples/spiral.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "box"
path = "examples/box.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "custom_mesh_type"
path = "examples/custom_mesh_type.rs"
doc-scrape-examples = true
required-features = ["nalgebra"]

[[example]]
name = "fern"
path = "examples/fern.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "loft"
path = "examples/loft.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "path"
path = "examples/path.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "svg"
path = "examples/svg.rs"
doc-scrape-examples = true
required-features = ["bevy_example", "svg"]

[[example]]
name = "text"
path = "examples/text.rs"
doc-scrape-examples = true
required-features = ["bevy_example", "fonts"]

[[example]]
name = "triangulation"
path = "examples/triangulation.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "zoo"
path = "examples/zoo.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[example]]
name = "zoo_2d"
path = "examples/zoo_2d.rs"
doc-scrape-examples = true
required-features = ["bevy_example"]

[[bench]]
name = "triangulation"
harness = false
required-features = ["benchmarks"]

# Enable a small amount of optimization in debug mode
[profile.fast-dev]
inherits = "dev"
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.fast-dev.package."*"]
inherits = "dev"
opt-level = 3

[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1

# When profiling, we want to enable debug info and all optimizations
[profile.profiling]
inherits = "release"
debug = true

# docs.rs-specific configuration
[package.metadata.docs.rs]
# document all features
all-features = true
